version: "3.9"

services:
  db:
    image: postgres:16
    env_file:
      - ./env/db.env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - ai-recruit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    env_file:
      - ./env/backend.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - ai-recruit-network
    volumes:
      - ../backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    env_file:
      - ./env/frontend.env
    ports:
      - "4200:80"
    networks:
      - ai-recruit-network
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  pgdata:
    driver: local

networks:
  ai-recruit-network:
    driver: bridge
